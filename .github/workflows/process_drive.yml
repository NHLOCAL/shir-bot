name: Process New Drive Files and Update CSV

on:
  push:
    branches:
      # Adjust branch name if needed, e.g., 'main' or your feature branch
      - main
      - new-singles # Or keep the original branch if preferred
    paths:
      # --- UPDATED: Trigger if the script in its new location changes ---
      - 'drive_data/process_drive_folder.py'
      - '.github/workflows/process_drive.yml'
      # Optionally trigger if requirements change (still in root)
      - 'requirements.txt'
      # Optionally trigger if data files change (already correct)
      # - 'drive_data/**'
  workflow_dispatch: # Allows manual triggering
  schedule:
    # Runs daily at 4 AM UTC (adjust as needed, consider timezone of file uploads)
    - cron: '0 4 * * *'

permissions:
  contents: write # Allow workflow to commit changes (state.json, new-songs.csv)

jobs:
  process-drive-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Assumes requirements.txt is still in the root directory
          pip install -r requirements.txt

      - name: Authenticate Google Drive (Target Account)
        env:
          GDRIVE_TOKEN_JSON_CONTENT: ${{ secrets.GDRIVE_TOKEN_JSON }}
        run: |
          if [ -z "$GDRIVE_TOKEN_JSON_CONTENT" ]; then
            echo "::error::GDRIVE_TOKEN_JSON secret is not set or empty. Authentication cannot proceed."
            exit 1
          else
            echo "Google Drive secret found. Proceeding..."
          fi

      - name: Run Drive Processing Script
        env:
          GDRIVE_TOKEN_JSON_CONTENT: ${{ secrets.GDRIVE_TOKEN_JSON }}
        # --- UPDATED: Run the script from its new location ---
        run: python drive_data/process_drive_folder.py

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check for changes in state or csv file
        id: check_changes
        run: |
          # Paths are already correct as they point into drive_data
          git add drive_data/drive_state.json drive_data/new-songs.csv
          if git diff --staged --quiet; then
            echo "No changes detected in drive_data/drive_state.json or drive_data/new-songs.csv."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in drive_data/drive_state.json or drive_data/new-songs.csv."
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          # Commit message is already correct
          git commit -m "Update drive_data/drive_state.json and drive_data/new-songs.csv from Drive processing [skip ci]"

          retry_count=0
          max_retries=3
          until git pull --rebase && git push || [ $retry_count -eq $max_retries ]; do
            retry_count=$((retry_count+1))
            echo "Push failed or conflict detected. Retrying ($retry_count/$max_retries) after git pull --rebase in 15 seconds..."
            sleep 15
          done

          if [ $retry_count -eq $max_retries ]; then
            echo "::error::Failed to push changes after multiple retries. Please check for conflicts manually."
          else
            echo "Changes committed and pushed successfully."
          fi